@import "tailwindcss";

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );
}

.background-size-lg {
  background-size: 200% 200%;
}

.animate-bg-gradient {
  animation: resize 2s linear infinite alternate;

  @media (width >= 48rem /* 768px */) {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        animation: resize 5s linear infinite alternate,
          hover 2s ease-in-out infinite alternate;
      }
    }
  }
}

@keyframes dot-matrix {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 100% 100%;
  }
}

@keyframes resize {
  0% {
    background-size: 200% 200%;
  }
  100% {
    background-size: 400% 400%;
  }
}

@keyframes hover {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.1);
  }
}

.animate-fade-in {
  animation: fade-in 0.25s ease-in-out;
}

.animate-fade-out {
  animation: fade-in 0.25s ease-in-out backwards;
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 240, 240, 240;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  background: linear-gradient(
    to bottom right,
    rgb(var(--background-start-rgb)),
    rgb(var(--background-end-rgb))
  );
  color: rgb(var(--foreground-rgb));
}
